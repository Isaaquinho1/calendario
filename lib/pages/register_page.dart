import 'package:calendario/componentes/my_button.dart';

import 'package:calendario/componentes/my_textfield.dart';

import 'package:firebase_auth/firebase_auth.dart';

import 'package:flutter/material.dart';

import 'package:flutter_svg/flutter_svg.dart';

import '../screens/home_screen.dart'; // üîë A√±adida importaci√≥n para navegar a HomeScreen



class RegisterPage extends StatefulWidget {

  final Function()? onTap;

  const RegisterPage({super.key, required this.onTap});



  @override

  State<RegisterPage> createState() => _RegisterPageState();

}



class _RegisterPageState extends State<RegisterPage> {

  // text editing controllers

  final emailController = TextEditingController();

  final passwordController = TextEditingController();

  final confirmPasswordController = TextEditingController();



  // NUEVO: Estado para el checkbox de t√©rminos y condiciones

  bool _agreedToTerms = false;

 

 // üîë ESTADOS DE VISIBILIDAD PARA CADA CAMPO

  bool _isPasswordVisible = false;

  bool _isConfirmPasswordVisible = false;



  // ------------------------------------------------------------------

  // FUNCI√ìN: Muestra mensajes de error al usuario (fondo morado)

  // ------------------------------------------------------------------

  void showErrorMessage(String message) {

    if (!mounted) return; // üîë Chequeo de seguridad al inicio

   

    showDialog(

      context: context,

      barrierDismissible: true, // Permitir cerrar al tocar fuera

      builder: (context) {

        return AlertDialog(

          backgroundColor: const Color.fromARGB(255, 114, 193, 243),

          title: const Center(

            child: Text(

              "Error de Registro", // T√≠tulo en espa√±ol para el di√°logo

              style: TextStyle(

                color: Colors.white,

                fontWeight: FontWeight.bold,

              ),

            ),

          ),

          content: Text(

            message,

            textAlign: TextAlign.center,

            style: const TextStyle(color: Colors.white, fontSize: 16),

          ),

          // Se han eliminado las acciones (el bot√≥n "Aceptar")

        );

      },

    );

  }



  // ------------------------------------------------------------------

  // FUNCI√ìN: Mostrar mensaje de √©xito (fondo verde)

  // ------------------------------------------------------------------

  void showSuccessMessage(String message) {

    if (!mounted) return; // üîë Chequeo de seguridad al inicio

   

    showDialog(

      context: context,

      barrierDismissible: true, // Permitir cerrar al tocar fuera

      builder: (dialogContext) { // Usamos 'dialogContext' para evitar ambig√ºedad

       

        // Cierra el di√°logo y NAVEGA autom√°ticamente despu√©s de un peque√±o delay

        Future.delayed(const Duration(milliseconds: 500), () {

          if (!mounted) return; {

            // Cierra el di√°logo

            Navigator.pop(dialogContext);

           

            // NAVEGACI√ìN A HOME SCREEN DESPU√âS DEL √âXITO

            Navigator.pushReplacement(

              context,

              MaterialPageRoute(builder: (context) => const HomeScreen()),

            );

          }

        });

       

        return AlertDialog(

          backgroundColor: const Color.fromARGB(255, 114, 193, 243), // Color verde para indicar √©xito

          title: const Center(

            child: Text(

              "Registro Exitoso", // T√≠tulo de √©xito

              style: TextStyle(

                color: Colors.white,

                fontWeight: FontWeight.bold,

              ),

            ),

          ),

          content: Text(

            message,

            textAlign: TextAlign.center,

            style: const TextStyle(color: Colors.white, fontSize: 16),

          ),

        );

      },

    );

  }


// ------------------------------------------------------------------
  // FUNCI√ìN: Muestra el di√°logo de T√©rminos y Condiciones (ACTUALIZADO)
  // ------------------------------------------------------------------
  void _showTermsAndConditionsDialog() {
    if (!mounted) return; // üîë Chequeo de seguridad
    
    showDialog(
      context: context,
      barrierDismissible: true,
      builder: (context) {
        return AlertDialog(
          backgroundColor: Colors.white,
          title: const Text(
            "T√©rminos, Condiciones y Privacidad", // T√≠tulo actualizado
            style: TextStyle(fontWeight: FontWeight.bold, color: Colors.deepPurple),
          ),
          content: SingleChildScrollView(
            child: Text(
              '''T√©rminos y condiciones para Remind
√öltima actualizaci√≥n: CDMX a 5 de octubre de 2025

Bienvenido a Remind, una aplicaci√≥n m√≥vil dise√±ada para ayudar a los usuarios a organizar sus actividades, administrar mejor su tiempo y aumentar su productividad de manera sencilla y pr√°ctica.
Al descargar, instalar o utilizar la aplicaci√≥n Remind, aceptas los presentes T√©rminos y condiciones. Si no est√°s de acuerdo con alguno de ellos, te recomendamos no utilizar la aplicaci√≥n.

1. Objeto de la aplicaci√≥n
Remind ofrece a los usuarios una herramienta digital para:
Crear recordatorios y tareas.
Gestionar un calendario integrado.
Organizar actividades personales o laborales.
Mejorar la productividad y reducir el estr√©s derivado de la desorganizaci√≥n.

2. Aceptaci√≥n de los t√©rminos
El uso de Remind implica la aceptaci√≥n plena y sin reservas de los presentes T√©rminos y condiciones, as√≠ como de la Pol√≠tica de Privacidad asociada.

3. Requisitos de uso
La aplicaci√≥n est√° disponible para dispositivos m√≥viles con sistemas operativos Android e iOS.
Debes contar con acceso a internet para sincronizar algunos datos.
El usuario es responsable de mantener la seguridad de su dispositivo y credenciales de acceso.

4. Registro y cuenta de usuario
Algunas funciones pueden requerir la creaci√≥n de una cuenta personal.
La informaci√≥n proporcionada debe ser veraz, completa y actualizada.
El usuario es responsable de la confidencialidad de sus credenciales y actividades dentro de la aplicaci√≥n.

5. Licencia de uso
Remind otorga al usuario una licencia limitada, personal, no exclusiva e intransferible para utilizar la aplicaci√≥n √∫nicamente con fines personales y no comerciales.

6. Propiedad intelectual
Todos los derechos de propiedad intelectual relacionados con la aplicaci√≥n, su dise√±o, logotipos, textos, interfaces y funciones pertenecen a Remind o a sus licenciantes. Queda prohibida su copia, distribuci√≥n o modificaci√≥n sin autorizaci√≥n expresa.

7. Uso aceptable
El usuario se compromete a:
No utilizar la aplicaci√≥n para actividades ilegales o no autorizadas.
No intentar vulnerar la seguridad o el funcionamiento de la app.
No distribuir virus o software malicioso a trav√©s de la plataforma.

8. Disponibilidad y actualizaciones
Remind puede sufrir interrupciones, errores o limitaciones t√©cnicas. Nos reservamos el derecho de actualizar, modificar o suspender temporal o permanentemente la aplicaci√≥n en cualquier momento.

9. Limitaci√≥n de responsabilidad
Remind es una herramienta de apoyo para la organizaci√≥n personal, pero no garantiza resultados espec√≠ficos en la productividad del usuario.
No nos hacemos responsables de p√©rdidas, da√±os o consecuencias derivados del uso o la imposibilidad de uso de la aplicaci√≥n.

10. Privacidad y datos personales
El tratamiento de los datos personales se regir√° por nuestra Pol√≠tica de privacidad, disponible dentro de la aplicaci√≥n.

11. Modificaciones
Remind se reserva el derecho de modificar estos T√©rminos y condiciones en cualquier momento. Los cambios ser√°n notificados a trav√©s de la aplicaci√≥n y entrar√°n en vigor desde su publicaci√≥n.

12. Legislaci√≥n aplicable
Estos T√©rminos se regir√°n por las leyes del pa√≠s en el que la aplicaci√≥n se encuentre registrada y cualquier controversia se someter√° a los tribunales competentes de dicha jurisdicci√≥n.

----------------------------------------

Pol√≠tica de privacidad ‚Äì Remind
√öltima actualizaci√≥n: CDMX a 5 de octubre de 2025

En Remind, valoramos y respetamos la privacidad de nuestros usuarios. Esta Pol√≠tica de privacidad explica c√≥mo recopilamos, usamos, protegemos y compartimos la informaci√≥n personal que proporcionas al usar nuestra aplicaci√≥n m√≥vil.
Al utilizar Remind, aceptas los t√©rminos de esta pol√≠tica. Si no est√°s de acuerdo, te recomendamos no utilizar la aplicaci√≥n.

1. Informaci√≥n que recopilamos
Remind puede recopilar los siguientes tipos de informaci√≥n:
a) Informaci√≥n proporcionada por el usuario
Nombre, correo electr√≥nico y/o contrase√±a, en caso de crear una cuenta.
Datos opcionales que el usuario agregue en sus tareas, notas o recordatorios.
b) Informaci√≥n t√©cnica y del dispositivo
Tipo de dispositivo, sistema operativo (Android o iOS), versi√≥n de la app e identificadores √∫nicos.
Direcci√≥n IP, zona horaria y configuraci√≥n del idioma.
c) Informaci√≥n de uso
Frecuencia de uso, funciones utilizadas, fechas de creaci√≥n o modificaci√≥n de tareas.
Errores o fallos t√©cnicos que ayuden a mejorar la aplicaci√≥n.

2. Finalidad del tratamiento de datos
Los datos recopilados se utilizan para:
Permitir el funcionamiento correcto de la aplicaci√≥n.
Guardar y sincronizar recordatorios, tareas y eventos del calendario.
Mejorar la experiencia del usuario y la calidad del servicio.
Ofrecer notificaciones o alertas personalizadas.
Mantener la seguridad de las cuentas y prevenir usos indebidos.

3. Bases legales del tratamiento
El tratamiento de los datos personales se realiza sobre las siguientes bases:
Consentimiento del usuario, al crear una cuenta o usar la app.
Cumplimiento de obligaciones contractuales, para garantizar el funcionamiento del servicio.
Inter√©s leg√≠timo de Remind en mejorar y mantener la aplicaci√≥n.

4. Compartici√≥n de informaci√≥n
Remind no vende, alquila ni comparte informaci√≥n personal con terceros, salvo en los siguientes casos:
Proveedores de servicios tecnol√≥gicos que apoyan el funcionamiento de la app (por ejemplo, servicios de almacenamiento en la nube o autenticaci√≥n).
Cumplimiento legal, cuando sea requerido por una autoridad competente conforme a la ley.
En todos los casos, se aplican medidas para garantizar la confidencialidad y seguridad de los datos.

5. Seguridad de la informaci√≥n
Implementamos medidas t√©cnicas y organizativas razonables para proteger la informaci√≥n personal contra p√©rdida, robo, acceso no autorizado, alteraci√≥n o destrucci√≥n.
No obstante, ning√∫n sistema es completamente seguro, por lo que no podemos garantizar la seguridad absoluta de la informaci√≥n transmitida por internet.

6. Derechos del usuario
El usuario puede ejercer en cualquier momento sus derechos de:
Acceso: conocer qu√© datos se est√°n tratando.
Rectificaci√≥n: corregir informaci√≥n inexacta o incompleta.
Cancelaci√≥n: solicitar la eliminaci√≥n de sus datos personales.
Oposici√≥n: oponerse al uso de sus datos para fines no esenciales.
Para ejercer estos derechos, puede contactarnos en: [remindapp@gmail.com]

7. Conservaci√≥n de los datos
Los datos personales se conservar√°n mientras el usuario mantenga su cuenta activa o mientras sea necesario para brindar los servicios de la aplicaci√≥n.
Si el usuario elimina su cuenta, los datos se eliminar√°n o anonimizar√°n dentro de un plazo razonable.

8. Uso de Cookies y tecnolog√≠as similares
Remind puede emplear cookies locales o tecnolog√≠as similares (como almacenamiento interno del dispositivo) para mejorar la experiencia del usuario, guardar preferencias y optimizar el rendimiento de la aplicaci√≥n.

9. Enlaces a terceros
La aplicaci√≥n puede contener enlaces a servicios o sitios web externos.
Remind no se responsabiliza por las pr√°cticas de privacidad de dichos sitios; se recomienda leer sus pol√≠ticas antes de proporcionar cualquier informaci√≥n.

10. Modificaciones a la pol√≠tica
Nos reservamos el derecho de actualizar esta Pol√≠tica de privacidad en cualquier momento.
Las modificaciones se notificar√°n dentro de la aplicaci√≥n y entrar√°n en vigor desde su publicaci√≥n.

11. Contacto
Si tienes preguntas, comentarios o solicitudes relacionadas con esta Pol√≠tica de privacidad, puedes comunicarte con nosotros a trav√©s de:
¬†üìß [remindapp@gmail.com]
¬†üì± Aplicaci√≥n: Remind
¬†üåê Disponible para: Android e iO
''',
              style: TextStyle(color: Colors.grey[800], fontSize: 14),
            ),
          ),
          // --- MEJORA DE UI ---
          // A√±adimos un bot√≥n expl√≠cito para cerrar el di√°logo
          actions: [
            TextButton(
              onPressed: () => Navigator.pop(context),
              child: const Text(
                "Cerrar",
                style: TextStyle(color: Colors.deepPurple, fontWeight: FontWeight.bold),
              ),
            ),
          ],
        );
      },
    );
  }


  // ------------------------------------------------------------------

  // M√âTODO PRINCIPAL: sign user up method

  // ------------------------------------------------------------------

  void signUserUp() async {

    // 0. VALIDACI√ìN DE ACEPTACI√ìN DE T√âRMINOS

    if (!_agreedToTerms) {

      showErrorMessage("Debes aceptar los T√©rminos y Condiciones para registrarte.");

      return;

    }



    // 1. VALIDACI√ìN DE CAMPOS VAC√çOS

    if (emailController.text.isEmpty ||

        passwordController.text.isEmpty ||

        confirmPasswordController.text.isEmpty) {

      showErrorMessage("Por favor, rellena todos los campos.");

      return;

    }



    // MOSTRAR LA RUEDA DE CARGA

    if (!mounted) return; // Chequeo antes de usar context para showDialog

    showDialog(

      context: context,

      barrierDismissible: false, // Evita que se cierre al tocar fuera

      builder: (context) {

        return const Center(

          child: CircularProgressIndicator(color: Colors.deepPurple),

        );

      },

    );



    // Intentar crear el usuario

    try {

      // 2. Verificar si las contrase√±as coinciden

      if (passwordController.text != confirmPasswordController.text){

       

        // üîë CORRECCI√ìN DE LA L√çNEA 152: Uso del context despu√©s de await/l√≥gica.

        if (mounted) {

          Navigator.pop(context); // Cierra la rueda de carga

          showErrorMessage("Las contrase√±as no coinciden.");

        }

        return; // Detener la funci√≥n

      }



      // 3. Crear el usuario en Firebase

      await FirebaseAuth.instance.createUserWithEmailAndPassword(

        email: emailController.text,

        password: passwordController.text,

      );



      // Si es exitoso, quitar la rueda de carga y mostrar mensaje.

      // üîë CORRECCI√ìN DE LA L√çNEA 159: Uso del context despu√©s de await/l√≥gica.

      if (mounted) {

        Navigator.pop(context);

        showSuccessMessage("Cuenta registrada correctamente.");

      }



    } on FirebaseAuthException catch (e) {

     

      // Manejo de errores de Firebase

      if (mounted) {

        // Quitar la rueda de carga

        Navigator.pop(context);



        String errorMessage;

        // Traducir los c√≥digos de error comunes de Firebase

        switch (e.code) {

          case 'weak-password':

            errorMessage = 'La contrase√±a es demasiado d√©bil. Debe tener al menos 8 caracteres, una mayuscula y un n√∫mero.';

            break;

          case 'email-already-in-use':

            errorMessage = 'El correo electr√≥nico ya est√° registrado.';

            break;

          case 'invalid-email':

            errorMessage = 'El formato del correo electr√≥nico es inv√°lido.';

            break;

          case 'operation-not-allowed':

            errorMessage = 'El registro de usuarios est√° deshabilitado temporalmente.';

            break;

          default:

            errorMessage = 'La contrase√±a es demasiado d√©bil. Debe tener al menos 8 caracteres, una mayuscula y un n√∫mero.';

            break;

        }

        showErrorMessage(errorMessage);

      }

    }

  }



  @override

  Widget build(BuildContext context) {

    return Scaffold(

      backgroundColor: const Color.fromARGB(255, 255, 255, 255),

      body: SafeArea(

        child: Center(

          child: SingleChildScrollView( // Usar SingleChildScrollView para evitar desbordamiento

            child: Column(

              mainAxisAlignment: MainAxisAlignment.center,

              children: [

                const SizedBox(height: 25),



                SvgPicture.asset(

                  'assets/remi2.svg',

                  height: 150, // Ajustar la altura

                ),



                const SizedBox(height: 25),



                // üîë NUEVO TEXTO: ¬°Hola, te damos la bienvenida a Remind!

                Text(

                  '¬°Hola, te damos la bienvenida a Remind!',

                  textAlign: TextAlign.center,

                  style: TextStyle(

                    color: const Color.fromARGB(255, 0, 0, 0),

                    fontSize: 22, // Tama√±o m√°s grande que el original (20)

                    fontWeight: FontWeight.bold, // Texto en negritas

                  ),

                ),



                const SizedBox(height: 30),





                // üîë NUEVO TEXTO DE INSTRUCCI√ìN (Reemplaza el texto '¬°Reg√≠strate')

                /*Text(

                  'Registrate',

                  style: TextStyle(

                    color: Colors.grey[700],

                    // Tama√±o similar a un hintText (el que usa MyTextField)

                    fontSize: 16,

                  ),

                ),

               

                const SizedBox(height: 30),

*/

                // username textfield

                MyTextField(

                  controller: emailController,

                  hintText: 'Ingresar correo electr√≥nico', // Correcci√≥n de acento

                  obscureText: false,

                ),



                const SizedBox(height: 10),



                // üîë CAMPO DE CONTRASE√ëA (passwordController)

                MyTextField(

                  controller: passwordController,

                  hintText: 'Ingresar contrase√±a',

                  // Usa el estado para ocultar/mostrar

                  obscureText: !_isPasswordVisible,

                  // üîë √çcono de visibilidad

                  suffixIcon: IconButton(

                    icon: Icon(

                      _isPasswordVisible

                          ? Icons.visibility_off_outlined

                          : Icons.visibility_outlined,

                      color: const Color.fromARGB(255, 59, 59, 59),

                    ),

                    onPressed: () {

                      setState(() {

                        _isPasswordVisible = !_isPasswordVisible; // Alternar visibilidad

                      });

                    },

                  ),

                ),



                const SizedBox(height: 10),



                // üîë CAMPO DE CONFIRMACI√ìN DE CONTRASE√ëA (confirmPasswordController)

                MyTextField(

                  controller: confirmPasswordController,

                  hintText: 'Confirmar contrase√±a',

                  // Usa el estado de confirmaci√≥n

                  obscureText: !_isConfirmPasswordVisible,

                  // üîë √çcono de visibilidad

                  suffixIcon: IconButton(

                    icon: Icon(

                      _isConfirmPasswordVisible

                          ? Icons.visibility_off_outlined

                          : Icons.visibility_outlined,

                      color: const Color.fromARGB(255, 59, 59, 59),

                    ),

                    onPressed: () {

                      setState(() {

                        _isConfirmPasswordVisible = !_isConfirmPasswordVisible; // Alternar visibilidad

                      });

                    },

                  ),

                ),



                const SizedBox(height: 15),



                // NUEVO: Checkbox de T√©rminos y Condiciones

                Padding(

                  padding: const EdgeInsets.symmetric(horizontal: 25.0),

                  child: Row(

                    children: [

                      Checkbox(

                        value: _agreedToTerms,

                        onChanged: (newValue) {

                          setState(() {

                            _agreedToTerms = newValue!;

                          });

                        },

                        activeColor: const Color.fromARGB(255, 58, 183, 100),

                      ),

                      Text(

                        'Acepto los ',

                        style: TextStyle(color: Colors.grey[700], fontSize: 14),

                      ),

                      GestureDetector(

                        onTap: _showTermsAndConditionsDialog, // Llama al di√°logo

                        child: const Text(

                          'T√©rminos y condiciones',

                          style: TextStyle(

                            color: Colors.blue, // Palabra clave en azul

                            fontWeight: FontWeight.bold,

                            decoration: TextDecoration.underline,

                            fontSize: 14,

                          ),

                        ),

                      ),

                    ],

                  ),

                ),



                const SizedBox(height: 25),



                // sign in button

                MyButton(

                  text: "Registrarse", // Cambio a may√∫scula

                  onTap: signUserUp,

                ),



                const SizedBox(height: 50),



                // already a member? login now

                Row(

                  mainAxisAlignment: MainAxisAlignment.center,

                  children: [

                    Text(

                      '¬øYa tienes una cuenta?', // Texto m√°s natural

                      style: TextStyle(color: Colors.grey[700]),

                    ),

                    const SizedBox(width: 4),

                    GestureDetector(

                      onTap: widget.onTap,

                      child: const Text(

                        'Iniciar sesi√≥n', // Cambio de texto

                        style: TextStyle(

                          color: Colors.blue,

                          fontWeight: FontWeight.bold,

                        ),

                      ),

                    ),

                  ],

                ),

                const SizedBox(height: 25),

              ],

            ),

          ),

        ),

      ),

    );

  }

}