import 'package:calendario/firebase_options.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
// üîë Importaciones para la l√≥gica de tareas y Hive
import 'package:hive_flutter/hive_flutter.dart'; 
import 'package:intl/date_symbol_data_local.dart';
import 'models/task.dart'; 
// üîë Importaciones de Localizaci√≥n
import 'package:flutter_localizations/flutter_localizations.dart'; 

import 'screens/splash_screen.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  
  // 1. Inicializaci√≥n de Firebase
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  
  // 2. Inicializaci√≥n de Hive y Formato de Fecha
  await initializeDateFormatting('es', null);
  
  // ‚ùå ELIMINADA: await NotificationService.init(); (Causa conflicto de Gradle)
  
  // Inicializaci√≥n de Hive
  await Hive.initFlutter();
  Hive.registerAdapter(TaskAdapter()); // Aseg√∫rate de que TaskAdapter exista
  
  // Apertura de cajas necesarias
  await Hive.openBox<Task>('tasks'); // Box de Tareas
  await Hive.openBox('userBox'); // Box de Perfil

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      
      // üîë CONFIGURACI√ìN DE LOCALIZACI√ìN (ESPA√ëOL)
      locale: Locale('es', 'ES'), 
      localizationsDelegates: [
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
      ],
      supportedLocales: [
        Locale('es', 'ES'), // Espa√±ol
        Locale('en', 'US'), // Ingl√©s (como respaldo)
      ],
      
      // La aplicaci√≥n inicia con la nueva pantalla de carga
      home: SplashScreen(), // Asumo que tienes una AuthWrapper o SplashScreen que llama a AuthPage
    );
  }
}

// ‚ö†Ô∏è NOTA: Este c√≥digo asume que tu Splash Screen ahora es AuthWrapper,
// o que el SplashScreen debe ser colocado aqu√≠. 
// Usar√© el nombre 'AuthWrapper' por convenci√≥n, pero si tu clase se llama SplashScreen,
// deber√°s ajustar la l√≠nea 'home: AuthWrapper()' a 'home: SplashScreen()'.